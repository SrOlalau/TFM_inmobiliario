# Nombre del flujo de trabajo. Puedes cambiarlo si lo deseas.
name: 3.Ingenieria_de_variables

# Variables de entorno globales. Modifica estos valores según tu configuración.
env:
  # El repositorio de Docker donde se publicará la imagen. Formato: usuario/nombre-repositorio
  DOCKER_REPOSITORY: srolalau/poi
  # La ruta al Dockerfile dentro de tu repositorio. Modifica esto si mueves tu Dockerfile.
  DOCKERFILE_PATH: dockerfiles/3.Ingenieria_de_variables/dockerfile_poi

# Define cuándo se ejecutará este flujo de trabajo
on:
  push:
    # Se activará cuando se haga push a la rama 'Servidor'. Cambia esto si usas una rama diferente.
    branches: [ Servidor ]
    # Solo se activará si hay cambios en la carpeta 'dockerfiles/test' o sus subcarpetas.
    # Modifica esta ruta si mueves tu Dockerfile a una ubicación diferente.
    paths:
      - 'dockerfiles/3.Ingenieria_de_variables/**'

# Define los trabajos que se ejecutarán
jobs:
  build-and-push:
    # Usa la última versión de Ubuntu como entorno de ejecución
    runs-on: ubuntu-latest
    steps:
    # Paso 1: Obtiene el código del repositorio
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configura Docker Buildx (permite construir imágenes para múltiples plataformas)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Paso 3: Inicia sesión en DockerHub
    # Asegúrate de haber configurado los secretos DOCKERHUB_USERNAME y DOCKERHUB_TOKEN en la configuración de tu repositorio
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Paso 4: Construye la imagen Docker y la publica en DockerHub
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        # El contexto de construcción. '.' significa el directorio raíz del repositorio.
        context: .
        # La ruta al Dockerfile. Usa la variable de entorno definida arriba.
        file: ${{ env.DOCKERFILE_PATH }}
        # Indica que queremos publicar la imagen después de construirla
        push: true
        # Define las etiquetas para la imagen. Aquí usamos 'latest' y el SHA del commit.
        tags: ${{ env.DOCKER_REPOSITORY }}:latest,${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
